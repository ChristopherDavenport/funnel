chemist {
  # the network settings for this chemist server.
  # it is advised that you always only ever bind to
  # the localhost, and not 0.0.0.0, as that could be
  # a security problem.
  network {
    host        = "127.0.0.1"
    port        = 9000
    funnel-port = 5775
  }

  # what sharding stratagy should we use? there are
  # currently several options, each with its own
  # caveats and trade-offs. please see the docuementation
  # for more specific information.
  sharding-strategy = "least-first-round-robin"
  # sharding-strategy = "random"

  # where should chemist store is stale view of the
  # world? really only used for answering http queries
  # so most of the time you only ever want to keep it
  # in-memory, as if the node crashes state will be
  # automatically re-discovered from any running flasks.
  state-cache = "memory"

  # during discovery, how should we classify instances?
  # the default chemist install only ships with the one
  # implementation, but if you wish to customise or
  # integrate chemist into your own environment then you
  # could provide a custom classifier to determine what it
  # means to be an "active flask" (for example).
  classification-stratagy = "default"

  # the maximum duration the http pool keeps a
  # network connection alive for.
  command-timeout = 2 seconds

  # how frequently should chemist poll the discovery api
  # looking for new targets to monitor. depending on your
  # platform, this may need to be set to a lower or higher
  # value (assuming you have the lifecycle streams setup
  # correctly it should be possible to get away with a
  # higher value here).
  rediscovery-interval = 6 minutes

  # the names used to find the sqs and sns queues
  sns-topic-name = "ops-chemist"
  sqs-queue-name = "ops-chemist"

  # based on these templates, chemist will figure
  # out how to communicate with a given target.
  # if its using http it will use the http templates
  # and resolve the @host and @port parts into their
  # actual values needed to communicate over the network.
  target-resource-templates = [
    "http://@host:@port/stream/previous",
    "http://@host:@port/stream/now?type=%22String%22",
    "zeromq+tcp://@host:@port/previous"
  ]
}

# the aws keys to be used by chemist-aws when working
# with the ec2/sqs/sns/cfn apis. in future these will
# go away as the system should make full use of machine
# iam roles such that the keys are just not needed.
aws {
  region = "us-east-1"
  access-key = "$(AWS_ACCESS_KEY)"
  secret-key = "$(AWS_SECRET_KEY)"
}

import "/usr/share/oncue/etc/env.conf"
