agent {
  jmx {
    # Name this jmx resource so that a "cluster" field can be specified
    # at query time which references the metrics imported via this source.
    # Exmaple would be: "dev-accounts-db-west-1a"
    name = "local-kafka-0.8.1"

    uri = "service:jmx:rmi:///jndi/rmi://127.0.0.1:6869/jmxrmi"

    poll-frequency = 28 seconds

    # Examples of jmx queries are:
    # *:type=Foo,name=Bar to match names in any domain whose exact set of keys is type=Foo,name=Bar.
    # d:type=Foo,name=Bar,* to match names in the domain d that have the keys type=Foo,name=Bar plus zero or more other keys.
    # *:type=Foo,name=Bar,* to match names in any domain that has the keys type=Foo,name=Bar plus zero or more other keys.
    # d:type=F?o,name=Bar will match e.g. d:type=Foo,name=Bar and d:type=Fro,name=Bar.
    # d:type=F*o,name=Bar will match e.g. d:type=Fo,name=Bar and d:type=Frodo,name=Bar.
    # d:type=Foo,name="B*" will match e.g. d:type=Foo,name="Bling". Wildcards are recognized even inside quotes, and like other special characters can be escaped with \.
    queries = [ "\"kafka.server\":type=\"BrokerTopicMetrics\",name=\"AllTopicsFailedProduceRequestsPerSec\"" ]

    # Use glob syntax to specify patterns of attributes that you do not wish to
    # collect from the JMX endpoint. An example are:
    # "*HistogramMicros"
    # "*Histogram"
    # etc
    exclude-attribute-patterns = [ ]
  }
}
